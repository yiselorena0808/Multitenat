export declare function schema(): import("../../src/types.js").ParsedTypedSchema<{
    username: {
        t: string;
        getTree(): import("../../src/types.js").SchemaLiteral;
    };
    password: {
        t?: string | null | undefined;
        getTree(): import("../../src/types.js").SchemaLiteral;
    };
    profile_picture: {
        t: string | null;
        getTree(): import("../../src/types.js").SchemaLiteral;
    };
    age: {
        t: number;
        getTree(): import("../../src/types.js").SchemaLiteral;
    };
    about: {
        t?: string | undefined;
        getTree(): import("../../src/types.js").SchemaLiteral;
    };
}>;
export declare function title(): string;
export declare function useCases(): ({
    data: {
        username: string;
        age: number;
        profile_picture?: undefined;
        about?: undefined;
    };
    fails: boolean;
    errors: {
        profile_picture: string[];
    };
    output: null;
} | {
    data: {
        username: string;
        profile_picture: null;
        age: number;
        about: null;
    };
    fails: boolean;
    errors: never[];
    output: {
        username: string;
        profile_picture: null;
        age: number;
    };
})[];
