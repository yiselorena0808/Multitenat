/*
 * @adonisjs/validator
 *
 * (c) AdonisJS
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
import { ValidationException } from '../validation_exception/index.js';
/**
 * The API Error reporter formats messages as an array of objects
 */
export class ApiErrorReporter {
    messages;
    bail;
    errors = [];
    /**
     * A boolean to know if an error has been reported or
     * not
     */
    hasErrors = false;
    constructor(messages, bail) {
        this.messages = messages;
        this.bail = bail;
    }
    /**
     * Report a new error
     */
    report(pointer, rule, message, arrayExpressionPointer, args) {
        this.hasErrors = true;
        this.errors.push({
            rule,
            field: pointer,
            message: this.messages.get(pointer, rule, message, arrayExpressionPointer, args),
            ...(args ? { args } : {}),
        });
        /**
         * Raise exception right away when `bail=true`.
         */
        if (this.bail) {
            throw this.toError();
        }
    }
    /**
     * Returns an instance of [[ValidationException]]
     */
    toError() {
        return new ValidationException(false, this.toJSON());
    }
    /**
     * Return errors
     */
    toJSON() {
        return {
            errors: this.errors,
        };
    }
}
